
name: Upload README to WIKI.js

on:
  # Starts the workflow when the commit make changes to a MarkDown file
  push:
    branches:
      - main
    paths:
      - '**.md'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  sync-readme:
    runs-on: ubuntu-latest
    environment: dev #Selection of the Environment
    steps:
      - name: Checkout README file
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            README.md
          sparse-checkout-cone-mode: true
      
      
      - name: Fetch current tags from Wiki.js
        env:
          WIKI_API_TOKEN: ${{ secrets.WIKI_API_TOKEN }}
          WIKI_PAGE_ID: ${{ vars.WIKI_PAGE_ID }}
        run: |
          echo "::group::üîç Fetching current tags from Wiki.js..."
          QUERY=$(cat << EOF
          {         
            pages {
              single (id:$WIKI_PAGE_ID) {
                id
                title
                tags{tag}
              }
            }
          }
          EOF
          )

          echo "Query: $QUERY"

          echo "üì§Fetching API"

          JSON_PAYLOAD=$(jq -n --arg q "$QUERY" '{query: $q}')


          RESPONSE=$(curl -s -X POST "https://wiki.franquinho.info/graphql" \
            -H "Authorization: Bearer $WIKI_API_TOKEN" \
            -H "Content-Type: application/json" \
            --data "$JSON_PAYLOAD")
          
          echo "‚úÖ CURL Fetch Done"
          
          TAGS=$(echo "$RESPONSE" | jq -c '[.data.pages.single.tags[].tag]')
          echo "‚úÖ Tags fetched: $TAGS"
          echo "TAGS=$TAGS_JSON" >> "$GITHUB_ENV"
          echo "::endgroup::"


      - name: Create GRAPH_QUERY
        env:
          WIKI_PAGE_ID: ${{ vars.WIKI_PAGE_ID }}
        run: |
          echo "::group::üîç Reading README.md content..."
          CONTENT=$(cat README.md | jq -Rs .)
          echo "‚úÖ README content loaded."
          echo "::endgroup::"

          echo "::group::üîß Preparing GraphQL query..."
          GRAPHQL_QUERY=$(cat << EOF
          mutation {
            pages {
              update(
                id: $WIKI_PAGE_ID,
                content: $CONTENT,
                editor: "markdown",
                isPrivate: false,
                isPublished: true,
                locale: "en",
                tags: $TAGS
              ) {
                responseResult {
                  succeeded
                  slug
                  message
                }
                page{
                  id
                  title
                  path
                  updatedAt
                }
              }
            }
          }
          EOF
          )
          echo "‚úÖ GraphQL query prepared."
          echo "::endgroup::"

          echo $GRAPHQL_QUERY

          echo "üì§ Send Query to GITHUB ENV"
          echo "GRAPHQL_QUERY="$GRAPHQL_QUERY >> "$GITHUB_ENV"
          echo Done
      
      - name: Upload README.md to Wiki.js
        env:
          WIKI_API_TOKEN: ${{ secrets.WIKI_API_TOKEN }}
        run: |
          echo "::group::üîß Preparing JSON PAYLOAD..."
          JSON_PAYLOAD=$(jq -n --arg q "$GRAPHQL_QUERY" '{query: $q}')
          echo "‚úÖ JSON PAYLOAD prepared."
          echo "::endgroup::"

          echo "::group::üöÄ Sending request to Wiki.js API..."
          curl -X POST "https://wiki.franquinho.info/graphql" \
            -H "Authorization: Bearer $WIKI_API_TOKEN" \
            -H "Content-Type: application/json" \
            --data "$JSON_PAYLOAD" | jq
          echo "::endgroup::"
